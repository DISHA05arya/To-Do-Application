#Python program to reverse an array
def list_reverse(arr,size):

	#if only one element present, then return the array
	if(size==1):
		return arr
	
	#if only two elements present, then swap both the numbers.
	elif(size==2):
		arr[0],arr[1],=arr[1],arr[0]
		return arr
	
	#if more than two elements presents, then swap first and last numbers.
	else:
		i=0
		while(i<size//2):

	#swap present and preceding numbers at time and jump to second element after swap
			arr[i],arr[size-i-1]=arr[size-i-1],arr[i]
	
	#skip if present and preceding numbers indexes are same
			if((i!=i+1 and size-i-1 != size-i-2) and (i!=size-i-2 and size-i-1!=i+1)):
				arr[i+1],arr[size-i-2]=arr[size-i-2],arr[i+1]
			i+=2
		return arr

arr=[1,2,3,4,5]
size=5
print('Original list: ',arr)
print("Reversed list: ",list_reverse(arr,size))

#This contributed by SR.Dhanush

 #include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
//Complete the following function.


void calculate_the_maximum(int n, int k) {
    int i,j,max_and=0,max_or=0,max_xor=0;
    for(i=1;i<=n;i++)
    {
        for(j=i+1;j<=n;j++)
        {
            int x=i&j,y=i|j,z=i^j;
            if(x<k & x>max_and)
                 max_and=x;
            if(y<k & y>max_or)
                 max_or = y;
            if(z<k & z>max_xor)
                 max_xor = z;       

        }
    }
    printf("%d\n%d\n%d",max_and,max_or,max_xor);
}

int main() {
    int n, k;
  
    scanf("%d %d", &n, &k);
    calculate_the_maximum(n, k);
    return 0;
}


//////////////////////////////////////
def gen_adjacent_node(matrix_2d, node=(0,0)):
    rows = len(matrix_2d)
    columns = len(matrix_2d[0])
    for r in [-1, 0, 1]:
        for c in [-1, 0, 1]:
            if r == c == 0:
                continue
            # check valid index
            if 0 <= node[0]+r < rows and 0 <= node[1]+c < columns:
                # print((node[0]+i, node[1]+j))
                yield (node[0]+r, node[1]+c)
                /////////////////////
                
                
// Java Program to find maximum in arr[]
import java.io.*;

class Test {
	static int arr[] = { 10, 324, 45, 90, 9808 };

	// Method to find maximum in arr[]
	static int largest()
	{
		int i;

		// Initialize maximum element
		int max = arr[0];

		// Traverse array elements from second and
		// compare every element with current max
		for (i = 1; i < arr.length; i++)
			if (arr[i] > max)
				max = arr[i];

		return max;
	}

	// Driver method
	public static void main(String[] args)
	{
		System.out.println("Largest in given array is "
						+ largest());
	}
}


























